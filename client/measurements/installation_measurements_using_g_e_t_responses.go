// Code generated by go-swagger; DO NOT EDIT.

package measurements

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/michalq/go-airly-api-client/models"
)

// InstallationMeasurementsUsingGETReader is a Reader for the InstallationMeasurementsUsingGET structure.
type InstallationMeasurementsUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InstallationMeasurementsUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInstallationMeasurementsUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 301:
		result := NewInstallationMeasurementsUsingGETMovedPermanently()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInstallationMeasurementsUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInstallationMeasurementsUsingGETOK creates a InstallationMeasurementsUsingGETOK with default headers values
func NewInstallationMeasurementsUsingGETOK() *InstallationMeasurementsUsingGETOK {
	return &InstallationMeasurementsUsingGETOK{}
}

/*InstallationMeasurementsUsingGETOK handles this case with default header values.

Measurements of the Installation given by id
*/
type InstallationMeasurementsUsingGETOK struct {
	Payload *models.Measurements
}

func (o *InstallationMeasurementsUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v2/measurements/installation][%d] installationMeasurementsUsingGETOK  %+v", 200, o.Payload)
}

func (o *InstallationMeasurementsUsingGETOK) GetPayload() *models.Measurements {
	return o.Payload
}

func (o *InstallationMeasurementsUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Measurements)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInstallationMeasurementsUsingGETMovedPermanently creates a InstallationMeasurementsUsingGETMovedPermanently with default headers values
func NewInstallationMeasurementsUsingGETMovedPermanently() *InstallationMeasurementsUsingGETMovedPermanently {
	return &InstallationMeasurementsUsingGETMovedPermanently{}
}

/*InstallationMeasurementsUsingGETMovedPermanently handles this case with default header values.

Installation was replaced by another installation in this location. Please follow redirect.
*/
type InstallationMeasurementsUsingGETMovedPermanently struct {
	/*url pointing to measurements of the installation replacement
	 */
	Location string
}

func (o *InstallationMeasurementsUsingGETMovedPermanently) Error() string {
	return fmt.Sprintf("[GET /v2/measurements/installation][%d] installationMeasurementsUsingGETMovedPermanently ", 301)
}

func (o *InstallationMeasurementsUsingGETMovedPermanently) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewInstallationMeasurementsUsingGETNotFound creates a InstallationMeasurementsUsingGETNotFound with default headers values
func NewInstallationMeasurementsUsingGETNotFound() *InstallationMeasurementsUsingGETNotFound {
	return &InstallationMeasurementsUsingGETNotFound{}
}

/*InstallationMeasurementsUsingGETNotFound handles this case with default header values.

No Installation was found by the given id
*/
type InstallationMeasurementsUsingGETNotFound struct {
}

func (o *InstallationMeasurementsUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/measurements/installation][%d] installationMeasurementsUsingGETNotFound ", 404)
}

func (o *InstallationMeasurementsUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
