// Code generated by go-swagger; DO NOT EDIT.

package installations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/michalq/go-airly-api-client/models"
)

// ByIDUsingGETReader is a Reader for the ByIDUsingGET structure.
type ByIDUsingGETReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ByIDUsingGETReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewByIDUsingGETOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 301:
		result := NewByIDUsingGETMovedPermanently()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewByIDUsingGETNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewByIDUsingGETOK creates a ByIDUsingGETOK with default headers values
func NewByIDUsingGETOK() *ByIDUsingGETOK {
	return &ByIDUsingGETOK{}
}

/*ByIDUsingGETOK handles this case with default header values.

Installation's info with coordinates, address etc
*/
type ByIDUsingGETOK struct {
	Payload *models.Installation
}

func (o *ByIDUsingGETOK) Error() string {
	return fmt.Sprintf("[GET /v2/installations/{installationId}][%d] byIdUsingGETOK  %+v", 200, o.Payload)
}

func (o *ByIDUsingGETOK) GetPayload() *models.Installation {
	return o.Payload
}

func (o *ByIDUsingGETOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Installation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewByIDUsingGETMovedPermanently creates a ByIDUsingGETMovedPermanently with default headers values
func NewByIDUsingGETMovedPermanently() *ByIDUsingGETMovedPermanently {
	return &ByIDUsingGETMovedPermanently{}
}

/*ByIDUsingGETMovedPermanently handles this case with default header values.

Installation was replaced by another installation in this location. Please follow redirect.
*/
type ByIDUsingGETMovedPermanently struct {
	/*url pointing to installation replacement
	 */
	Location string
}

func (o *ByIDUsingGETMovedPermanently) Error() string {
	return fmt.Sprintf("[GET /v2/installations/{installationId}][%d] byIdUsingGETMovedPermanently ", 301)
}

func (o *ByIDUsingGETMovedPermanently) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header Location
	o.Location = response.GetHeader("Location")

	return nil
}

// NewByIDUsingGETNotFound creates a ByIDUsingGETNotFound with default headers values
func NewByIDUsingGETNotFound() *ByIDUsingGETNotFound {
	return &ByIDUsingGETNotFound{}
}

/*ByIDUsingGETNotFound handles this case with default header values.

Installation not found
*/
type ByIDUsingGETNotFound struct {
}

func (o *ByIDUsingGETNotFound) Error() string {
	return fmt.Sprintf("[GET /v2/installations/{installationId}][%d] byIdUsingGETNotFound ", 404)
}

func (o *ByIDUsingGETNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
